#!/usr/bin/env bash

: "${CNI_PLUGINS_VERSION:=1.6.2}"
: "${CONTAINERD_VERSION:=1.7.25}"
: "${RUNC_VERSION:=1.2.4}"

exec 1>&2
set -eux -o pipefail

install -m u=rwx,go=rx -d /etc/containerd/ /opt/cni/{,bin/}

curl -fsSL "https://github.com/opencontainers/runc/releases/download/v$RUNC_VERSION/runc.amd64" \
| install -m u=rwx,go=rx /dev/fd/0 /usr/local/bin/runc

curl -fsSL "https://github.com/containernetworking/plugins/releases/download/v$CNI_PLUGINS_VERSION/cni-plugins-linux-amd64-v$CNI_PLUGINS_VERSION.tgz" \
| tar -xz -f- -C /opt/cni/bin/ --no-same-owner \
  ./bandwidth \
  ./bridge \
  ./dhcp \
  ./dummy \
  ./firewall \
  ./host-device \
  ./host-local \
  ./ipvlan \
  ./loopback \
  ./macvlan \
  ./portmap \
  ./ptp \
  ./sbr \
  ./static \
  ./tap \
  ./tuning \
  ./vlan \
  ./vrf

curl -fsSL "https://github.com/containerd/containerd/releases/download/v$CONTAINERD_VERSION/containerd-static-$CONTAINERD_VERSION-linux-amd64.tar.gz" \
| tar -xz -f- -C /usr/local/bin/ --strip-components=1 --no-same-owner \
  bin/containerd \
  bin/containerd-shim-runc-v2 \
  bin/containerd-stress \
  bin/ctr

curl -fsSL "https://raw.githubusercontent.com/containerd/containerd/v$CONTAINERD_VERSION/containerd.service" \
| install -m u=rw,go=r /dev/fd/0 /etc/systemd/system/containerd.service

systemctl daemon-reload

(containerd config default | gawk -f /dev/fd/3 | install -m u=rw,go=r /dev/fd/0 /etc/containerd/config.toml) 3<<'AWK'
$1 == "[plugins.\"io.containerd.grpc.v1.cri\".containerd.runtimes.runc.options]" {
    update_SystemdCgroup = 1
}
update_SystemdCgroup && $1 == "SystemdCgroup" {
    update_SystemdCgroup = 0
    $0 = gensub("^(\\s*SystemdCgroup\\s*)=.*$", "\\1= true", 1)
}
$1 == "[plugins.\"io.containerd.grpc.v1.cri\".registry]" {
    update_config_path = 1
}
update_config_path && $1 == "config_path" {
    update_config_path = 0
    $0 = gensub("^(\\s*config_path\\s*)=.*$", "\\1= \"/etc/containerd/certs.d/\"", 1)
}
{ print }
AWK

install -m u=rw,go=r -D /dev/fd/0 /etc/containerd/certs.d/registry.dev:5005/hosts.toml <<'EOF'
[host."http://registry.dev:5005"]
  capabilities = ["pull", "resolve"]
  skip_verify = true
EOF

systemctl enable containerd --now # must be started to pre-pull images in later stages

sync
